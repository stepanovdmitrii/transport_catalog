syntax="proto3";

package serialization;

message StopInfo {
  string name = 1;
  repeated string buses = 2;
}

message BusInfo {
    string name = 1;
    uint64 stop_count = 2;
    uint64 unique_stop_count = 3;
    int32 road_route_length = 4;
    double geo_route_length = 5;
}

message Edge {
    uint64 from = 1;
    uint64 to = 2;
    double weight = 3;
}

message Graph {
    repeated Edge edges = 1;
    uint64 vertex_count = 2;
}

message StopVertexIds {
    string name = 1;
    uint64 in = 2;
    uint64 out = 3;
}

message VertexInfo {
    string name = 1;
}

enum EdgeInfoType{
    WAIT = 0;
    BUS = 1;
}

message EdgeInfo {
    EdgeInfoType type = 1;
    string bus_name = 2;
    uint64 bus_start_stop_idx = 3;
    uint64 bus_finish_stop_idx = 4;
}

message RouteInternalData {
    bool has_value = 1;
    double weight = 2;
    bool has_prev_edge = 3;
    uint64 prev_edge_id = 4;
}

message RouteInternalDataVector {
    repeated RouteInternalData vector_data = 1;
}

message RouterImpl {
    repeated RouteInternalDataVector vectors = 1;
}

message Router {
    int32 bus_wait_time = 1;
    double bus_velocity= 2;
    Graph graph = 3;
    RouterImpl route_impl = 4;
    repeated StopVertexIds stop_vertex_ids = 5;
    repeated VertexInfo vertex_infos = 6;
    repeated EdgeInfo edge_infos = 7;
}

enum ColorType {
    NOT_DEFINED = 0;
    STRING = 1;
    RGB = 2;
    RGBA = 3;
}

message Color {
    ColorType type = 1;
    string color_string = 2;
    uint32 red = 3;
    uint32 green = 4;
    uint32 blue = 5;
    double opacity = 6;
}

message Point {
    double x = 1;
    double y = 2;
}

message RenderSettings {
    double max_width = 1;
    double max_height = 2;
    double padding = 3;
    double outer_margin = 4;
    repeated Color palette = 5;
    double line_width = 6;
    Color underlayer_color = 7;
    double underlayer_width = 8;
    double stop_radius = 9;
    Point bus_label_offset = 10;
    int32 bus_label_font_size = 11;
    Point stop_label_offset = 12;
    int32 stop_label_font_size = 13;
    repeated string layers = 14;
}

message Bus {
    repeated string stops = 1;
    repeated string endpoints = 2;
}

message Renderer {
    RenderSettings settings = 1;
    map<string, Point> stops_coords = 2;
    map<string, Color> bus_colors = 3;
    map<string, Bus> buses = 4;
}

message TransportCatalog {
    repeated BusInfo buses = 1;
    repeated StopInfo stops = 2;
    Router router = 3;
    Renderer renderer = 4;
}